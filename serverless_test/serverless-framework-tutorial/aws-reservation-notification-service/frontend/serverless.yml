service: reservation-system-frontend

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-northeast-2

plugins:
  - serverless-s3-sync
  # - serverless-cloudfront-invalidate

custom:
  s3Sync:
    - bucketName: ${self:service}-${sls:stage}
      localDir: dist      
      defaultContentType: text/html
      params:
        - source: '**/*'
          headers:
            CacheControl: 'max-age=31536000'
        - source: 'index.html'
          headers:
            CacheControl: 'no-cache'
  # cloudfrontInvalidate:
  #   - distributionId: ${cf:${self:service}-${sls:stage}.DistributionId}
  #     items: ['/*']

resources:
  Resources:
    WebsiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${sls:stage}
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false

    WebsiteBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref WebsiteBucket
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal: '*'
              Action: s3:GetObject
              Resource: !Join ['', [!GetAtt WebsiteBucket.Arn, '/*']]

    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: true
          DefaultRootObject: index.html
          DefaultCacheBehavior:
            ViewerProtocolPolicy: redirect-to-https
            TargetOriginId: S3Origin
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
          Origins:
            - DomainName: !Select [2, !Split ['/', !GetAtt WebsiteBucket.WebsiteURL]]
              Id: S3Origin
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: http-only

  Outputs:
    WebsiteURL:
      Value: !GetAtt WebsiteBucket.WebsiteURL
    CloudFrontURL:
      Value: !Join ['', ['https://', !GetAtt CloudFrontDistribution.DomainName]]